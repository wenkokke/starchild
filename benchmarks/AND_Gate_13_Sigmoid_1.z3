(declare-fun x12 () Real)
(declare-fun x11 () Real)
(declare-fun x10 () Real)
(declare-fun x9 () Real)
(declare-fun x8 () Real)
(declare-fun x7 () Real)
(declare-fun x6 () Real)
(declare-fun x5 () Real)
(declare-fun x4 () Real)
(declare-fun x3 () Real)
(declare-fun x2 () Real)
(declare-fun x1 () Real)
(declare-fun x0 () Real)
(assert (let ((a!1 (+ (* x0 76923080.0)
              (* x1 76923080.0)
              (* x2 76923080.0)
              (* x3 76923080.0)
              (* x4 76923080.0)
              (* x5 76923080.0)
              (* x6 76923080.0)
              (* x7 76923080.0)
              (* x8 76923080.0)
              (* x9 76923080.0)
              (* x10 76923080.0)
              (* x11 76923080.0)
              (* x12 76923080.0)
              (- 961538432.0))))
(let ((a!2 (ite (< a!1 0.0)
                0.0
                (ite (> a!1 1.0) 1.0 (+ (* (/ 1.0 4.0) a!1) (/ 1.0 2.0))))))
  (=> (and (= x0 0.0)
           (= x1 0.0)
           (= x2 0.0)
           (= x3 0.0)
           (= x4 0.0)
           (= x5 0.0)
           (= x6 0.0)
           (= x7 0.0)
           (= x8 0.0)
           (= x9 0.0)
           (= x10 0.0)
           (= x11 0.0)
           (= x12 0.0))
      (= a!2 0.0)))))
(assert (let ((a!1 (+ (* x0 76923080.0)
              (* x1 76923080.0)
              (* x2 76923080.0)
              (* x3 76923080.0)
              (* x4 76923080.0)
              (* x5 76923080.0)
              (* x6 76923080.0)
              (* x7 76923080.0)
              (* x8 76923080.0)
              (* x9 76923080.0)
              (* x10 76923080.0)
              (* x11 76923080.0)
              (* x12 76923080.0)
              (- 961538432.0))))
(let ((a!2 (ite (< a!1 0.0)
                0.0
                (ite (> a!1 1.0) 1.0 (+ (* (/ 1.0 4.0) a!1) (/ 1.0 2.0))))))
  (=> (and (= x0 0.0)
           (= x1 1.0)
           (= x2 1.0)
           (= x3 1.0)
           (= x4 1.0)
           (= x5 1.0)
           (= x6 1.0)
           (= x7 1.0)
           (= x8 1.0)
           (= x9 1.0)
           (= x10 1.0)
           (= x11 1.0)
           (= x12 1.0))
      (= a!2 0.0)))))
(assert (let ((a!1 (+ (* x0 76923080.0)
              (* x1 76923080.0)
              (* x2 76923080.0)
              (* x3 76923080.0)
              (* x4 76923080.0)
              (* x5 76923080.0)
              (* x6 76923080.0)
              (* x7 76923080.0)
              (* x8 76923080.0)
              (* x9 76923080.0)
              (* x10 76923080.0)
              (* x11 76923080.0)
              (* x12 76923080.0)
              (- 961538432.0))))
(let ((a!2 (ite (< a!1 0.0)
                0.0
                (ite (> a!1 1.0) 1.0 (+ (* (/ 1.0 4.0) a!1) (/ 1.0 2.0))))))
  (=> (and (= x0 0.0)
           (= x1 0.0)
           (= x2 0.0)
           (= x3 0.0)
           (= x4 0.0)
           (= x5 0.0)
           (= x6 0.0)
           (= x7 0.0)
           (= x8 0.0)
           (= x9 0.0)
           (= x10 0.0)
           (= x11 0.0)
           (= x12 1.0))
      (= a!2 0.0)))))
(assert (let ((a!1 (+ (* x0 76923080.0)
              (* x1 76923080.0)
              (* x2 76923080.0)
              (* x3 76923080.0)
              (* x4 76923080.0)
              (* x5 76923080.0)
              (* x6 76923080.0)
              (* x7 76923080.0)
              (* x8 76923080.0)
              (* x9 76923080.0)
              (* x10 76923080.0)
              (* x11 76923080.0)
              (* x12 76923080.0)
              (- 961538432.0))))
(let ((a!2 (ite (< a!1 0.0)
                0.0
                (ite (> a!1 1.0) 1.0 (+ (* (/ 1.0 4.0) a!1) (/ 1.0 2.0))))))
  (=> (and (= x0 1.0)
           (= x1 1.0)
           (= x2 1.0)
           (= x3 1.0)
           (= x4 1.0)
           (= x5 1.0)
           (= x6 1.0)
           (= x7 1.0)
           (= x8 1.0)
           (= x9 1.0)
           (= x10 1.0)
           (= x11 1.0)
           (= x12 1.0))
      (= a!2 1.0)))))
(check-sat)
